"" Source your .vimrc
source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=10

" Do incremental searching.
set incsearch

" shift-j to join lines
set ideajoin

" Don't use Ex mode, use Q for formatting.
map Q gq

set number          " Show current line number
set relativenumber  " Show relative line numbers
set ignorecase      " Case insensitive search
set smartcase       " Become case sensitive if search contains capital
set incsearch       " Highlight search results live
set hlsearch        " Highlight search results

" ctrl-L to clear search
nnoremap <C-L> :nohl<CR><C-L>

Plug 'tpope/vim-sensible'
Plug 'machakann/vim-highlightedyank'
Plug 'justinmk/vim-sneak'
Plug 'scrooloose/nerdtree'

""" Editing and Reloading the Config
set clipboard+=unnamed
set clipboard+=ideaput
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

""" The Leader Key
let mapleader=" "

""" Distraction Free Mode
"nnoremap <c-z> :action ToggleDistractionFreeMode<CR>

" Display options
map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fn <action>(GotoClass)
map <leader>fr <action>(RecentFiles)
map <leader>fc <action>(FindInPath)
map <leader>fa :action GotoAction<CR>
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)
nnoremap <leader>h  :action LocalHistory.ShowHistory<CR>
nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>
nnoremap <leader>s :write<CR>

" tab navigation
map <leader>tl <action>(NextTab)
map <leader>th <action>(PreviousTab)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

""" Running and Debugging
nnoremap ,r :action ContextRun<CR>
nnoremap ,c :action RunClass<CR>
nnoremap ,a :action ChooseRunConfiguration<CR>
nnoremap ,t :action ActivateRunToolWindow<CR>
nnoremap ,u :action Rerun<CR>
nnoremap ,f :action RerunFailedTests<CR>
nnoremap ,b :action ToggleLineBreakpoint<CR>
nnoremap ,d :action ContextDebug<CR>
nnoremap ,n :action ActivateDebugToolWindow<CR>
nnoremap ,j :action StepOver<CR>
nnoremap ,k :action StepOut<CR>
nnoremap ,l :action StepInto<CR>
nnoremap ,b :action CompileDirty<CR>
vnoremap ,e :action EvaluateExpression<CR>
nnoremap ,e :action EvaluateExpression<CR>
nnoremap <leader>, :action RunAnything<CR>

" Git windows
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)
map <leader>gm <Action>(Git.Menu)


" Popup navigation
"inoremap <C-j> <Action>(PopupMenu-selectNext)
"inoremap <C-k> <Action>(PopupMenu-selectPrev)

" Convertions
nnoremap <leader>csc :action StringManipulation.ToSnakeCase<CR><Esc>
vnoremap <leader>csc :action StringManipulation.ToSnakeCase<CR><Esc>
nnoremap <leader>ccc :action StringManipulation.ToCamelCase<CR><Esc>
vnoremap <leader>ccc :action StringManipulation.ToCamelCase<CR><Esc>


""" Tool windows
map <c-x> <action>(HideAllWindows)
map <leader>pp <Action>(JumpToLastWindow)
map <leader>pl <Action>(NextProjectWindow)
map <leader>ph <Action>(PreviousProjectWindow)
map <leader>o <Action>(ActivateStructureToolWindow)

""" Terminal
nnoremap <c-t> :action ActivateTerminalToolWindow<CR>
"nnoremap <leader>t :action Terminal.OpenInTerminal<CR>

" Open NERDTree (use q to exit)
map <leader>t :NERDTreeToggle<CR>
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc
